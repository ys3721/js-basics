{"remainingRequest":"/Users/hortor/Documents/workspace/js-basics/START/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hortor/Documents/workspace/js-basics/START/src/components/Task.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/hortor/Documents/workspace/js-basics/START/src/components/Task.vue","mtime":1703488016376},{"path":"/Users/hortor/Documents/workspace/js-basics/START/node_modules/cache-loader/dist/cjs.js","mtime":1703165540000},{"path":"/Users/hortor/Documents/workspace/js-basics/START/node_modules/babel-loader/lib/index.js","mtime":1703165544160},{"path":"/Users/hortor/Documents/workspace/js-basics/START/node_modules/cache-loader/dist/cjs.js","mtime":1703165540000},{"path":"/Users/hortor/Documents/workspace/js-basics/START/node_modules/vue-loader/lib/index.js","mtime":1703165541500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUYXNrSXRlbSBmcm9tICcuL1Rhc2staXRlbS52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJUYXNrIiwKICAgIHByb3BzOiBbJ3Rhc2tzJ10sCiAgICBjb21wb25lbnRzOnsKICAgICAgJ3RldG0nOiAgVGFza0l0ZW0KICAgIH0sCiAgICBkYXRlKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5ld1Rhc2s6InZhbHVlIgogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGluY29tcGxldGUoKXsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudGFza3MuZmlsdGVyKHRoaXMuaW5Qcm9ncmVzcykubGVuZ3RoOwogICAgICAgIH0KCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFkZFRhc2soKSB7CiAgICAgICAgICAgIGlmKHRoaXMubmV3VGFzaykgewogICAgICAgICAgICAgICAgdGhpcy50YXNrcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy5uZXdUYXNrLAogICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlZDogZmFsc2UsCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHRoaXMubmV3VGFzayA9ICIiOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBpblByb2dyZXNzKHRhc2spIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLmlzQ29tcGxldGVkKHRhc2spCiAgICAgICAgfSwKICAgICAgICBpc0NvbXBsZXRlZCh0YXNrKSB7CiAgICAgICAgICAgIHJldHVybiB0YXNrLmNvbXBsZXRlZAogICAgICAgIH0sCiAgICAgICAgY2xlYXJBbGwoKSB7CiAgICAgICAgICAgIHRoaXMudGFza3MgPSBbXQogICAgICAgIH0sIAogICAgICAgIGNsZWFyQ29tcGxldGVkKCkgewogICAgICAgICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5maWx0ZXIodGhpcy5pblByb2dyZXNzKQogICAgICAgIH0sIAogICAgICAgIHJlbW92ZVRhc2soaW5kZXgpIHsKICAgICAgICAgICAgdGhpcy50YXNrcy5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgfSwKICAgICAgICBjb21wbGV0ZVRhc2sodGFzaykgewogICAgICAgICAgICB0YXNrLmNvbXBsZXRlID0gIXRhc2suY29tcGxldGUKICAgICAgICB9LAogICAgfSwKfTsK"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"task\">\n            <!--title-->\n            <div class=\"title\">\n                <h1>To Do List</h1>\n            </div>\n            <!-- from -->\n            <div class=\"form\">\n                <input type=\"text\" placeholder=\"New Task\" v-model=\"newTask\" @keyup.enter=\"addTask\"/>\n                <button @click=\"addTask\"><i class=\"fas fa-plus\"></i></button>\n            </div>\n            <!-- task list-->\n            <div class=\"taskItems\">\n                <ul>\n                    <tetm v-bind:task=\"task\" v-for=\"(task, index) in tasks\" :key=\"task.id\" @remove=\"removeTask(index)\" @completeTask=\"completeTask(task)\"></tetm>\n                </ul>\n            </div>\n            <!-- buttons -->\n            <div class=\"clearBtns\">\n                <button @click=\"clearCompleted\">Clear completed</button>\n                <button @click=\"clearAll\">Clear all</button>\n            </div>\n            <!-- pending task -->\n            <div class=\"pendingTasks\">\n                <span>Pending Tasks: {{ incomplete }}</span>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport TaskItem from './Task-item.vue'\nexport default {\n    name: \"Task\",\n    props: ['tasks'],\n    components:{\n      'tetm':  TaskItem\n    },\n    date() {\n        return {\n            newTask:\"value\"\n        }\n    },\n    computed: {\n        incomplete(){\n            return this.tasks.filter(this.inProgress).length;\n        }\n\n    },\n    methods: {\n        addTask() {\n            if(this.newTask) {\n                this.tasks.push({\n                    title: this.newTask,\n                    completed: false,\n                });\n                this.newTask = \"\";\n            }\n        },\n        inProgress(task) {\n            return !this.isCompleted(task)\n        },\n        isCompleted(task) {\n            return task.completed\n        },\n        clearAll() {\n            this.tasks = []\n        }, \n        clearCompleted() {\n            this.tasks = this.tasks.filter(this.inProgress)\n        }, \n        removeTask(index) {\n            this.tasks.splice(index, 1)\n        },\n        completeTask(task) {\n            task.complete = !task.complete\n        },\n    },\n};\n</script>"]}]}